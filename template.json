{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vulnerabilityAssessments_Default_storageContainerPath": {
            "type": "SecureString"
        },
        "connections_sql_name": {
            "defaultValue": "sql",
            "type": "String"
        },
        "workflows_run_bck_name": {
            "defaultValue": "run_bck",
            "type": "String"
        },
        "connections_azuredatafactory_name": {
            "defaultValue": "azuredatafactory",
            "type": "String"
        },
        "workflows_globantchallengela_name": {
            "defaultValue": "globantchallengela",
            "type": "String"
        },
        "connections_azuredatafactory_1_name": {
            "defaultValue": "azuredatafactory-1",
            "type": "String"
        },
        "virtualNetworks_vnet_vpn_01_name": {
            "defaultValue": "vnet-vpn-01",
            "type": "String"
        },
        "virtualNetworkGateways_vpn01_name": {
            "defaultValue": "vpn01",
            "type": "String"
        },
        "publicIPAddresses_vpn_public_ip_name": {
            "defaultValue": "vpn-public-ip",
            "type": "String"
        },
        "servers_globant_challenge_db_server_name": {
            "defaultValue": "globant-challenge-db-server",
            "type": "String"
        },
        "storageAccounts_globantchallengesa_name": {
            "defaultValue": "globantchallengesa",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2024-03-01",
            "name": "[parameters('publicIPAddresses_vpn_public_ip_name')]",
            "location": "eastus",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "74.235.208.244",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2024-03-01",
            "name": "[parameters('virtualNetworks_vnet_vpn_01_name')]",
            "location": "eastus",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "privateEndpointVNetPolicies": "Disabled",
                "subnets": [
                    {
                        "name": "GatewaySubnet",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_vpn_01_name'), 'GatewaySubnet')]",
                        "properties": {
                            "addressPrefix": "10.0.2.0/24",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "networking",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_vpn_01_name'), 'networking')]",
                        "properties": {
                            "addressPrefix": "10.0.1.0/27",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "services",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_vpn_01_name'), 'services')]",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2024-05-01-preview",
            "name": "[parameters('servers_globant_challenge_db_server_name')]",
            "location": "eastus",
            "kind": "v12.0",
            "properties": {
                "administratorLogin": "challenge_admin",
                "version": "12.0",
                "minimalTlsVersion": "1.2",
                "publicNetworkAccess": "Enabled",
                "administrators": {
                    "administratorType": "ActiveDirectory",
                    "principalType": "User",
                    "login": "go2clouds_outlook.com#EXT#@go2cloudsoutlook.onmicrosoft.com",
                    "sid": "f62a3cc6-39be-4efb-955a-564b962f854a",
                    "tenantId": "ea19273c-9473-45d2-94ff-573b8bc1b893",
                    "azureADOnlyAuthentication": false
                },
                "restrictOutboundNetworkAccess": "Disabled"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2023-05-01",
            "name": "[parameters('storageAccounts_globantchallengesa_name')]",
            "location": "eastus",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "dnsEndpointType": "Standard",
                "defaultToOAuthAuthentication": false,
                "publicNetworkAccess": "Enabled",
                "allowCrossTenantReplication": false,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": true,
                "largeFileSharesState": "Enabled",
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "requireInfrastructureEncryption": false,
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_azuredatafactory_name')]",
            "location": "eastus",
            "kind": "V1",
            "properties": {
                "displayName": "live.com#go2clouds@outlook.com",
                "statuses": [
                    {
                        "status": "Connected"
                    }
                ],
                "customParameterValues": {},
                "nonSecretParameterValues": {
                    "token:grantType": "code"
                },
                "createdTime": "2025-03-06T04:24:42.3938852Z",
                "changedTime": "2025-03-06T04:24:54.4880775Z",
                "api": {
                    "name": "[parameters('connections_azuredatafactory_name')]",
                    "displayName": "Azure Data Factory",
                    "description": "Azure Data Factory is a hybrid data integration service that allows you to create, schedule and orchestrate your ETL/ELT workflows at scale wherever your data lives, in cloud or self-hosted network.",
                    "iconUri": "[concat('https://conn-afd-prod-endpoint-bmc9bqahasf3grgk.b01.azurefd.net/releases/v1.0.1680/1.0.1680.3652/', parameters('connections_azuredatafactory_name'), '/icon.png')]",
                    "brandColor": "#24A9E0",
                    "id": "[concat('/subscriptions/95b42fa2-56e8-468e-bd82-bb1af0d7844e/providers/Microsoft.Web/locations/eastus/managedApis/', parameters('connections_azuredatafactory_name'))]",
                    "type": "Microsoft.Web/locations/managedApis"
                },
                "testLinks": []
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_azuredatafactory_1_name')]",
            "location": "eastus",
            "kind": "V1",
            "properties": {
                "displayName": "apaccha@go2clouds.com",
                "statuses": [
                    {
                        "status": "Connected"
                    }
                ],
                "customParameterValues": {},
                "nonSecretParameterValues": {
                    "token:grantType": "code"
                },
                "createdTime": "2025-03-06T04:40:43.0925537Z",
                "changedTime": "2025-03-06T04:45:33.4062676Z",
                "api": {
                    "name": "azuredatafactory",
                    "displayName": "Azure Data Factory",
                    "description": "Azure Data Factory is a hybrid data integration service that allows you to create, schedule and orchestrate your ETL/ELT workflows at scale wherever your data lives, in cloud or self-hosted network.",
                    "iconUri": "https://conn-afd-prod-endpoint-bmc9bqahasf3grgk.b01.azurefd.net/releases/v1.0.1680/1.0.1680.3652/azuredatafactory/icon.png",
                    "brandColor": "#24A9E0",
                    "id": "/subscriptions/95b42fa2-56e8-468e-bd82-bb1af0d7844e/providers/Microsoft.Web/locations/eastus/managedApis/azuredatafactory",
                    "type": "Microsoft.Web/locations/managedApis"
                },
                "testLinks": []
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_sql_name')]",
            "location": "eastus",
            "kind": "V1",
            "properties": {
                "displayName": "globant_challenge_db",
                "statuses": [
                    {
                        "status": "Connected"
                    }
                ],
                "customParameterValues": {},
                "createdTime": "2024-06-06T04:24:36.8413024Z",
                "changedTime": "2024-06-06T04:24:36.8413024Z",
                "api": {
                    "name": "[parameters('connections_sql_name')]",
                    "displayName": "SQL Server",
                    "description": "Microsoft SQL Server is a relational database management system developed by Microsoft. Connect to SQL Server to manage data. You can perform various actions such as create, update, get, and delete on rows in a table.",
                    "iconUri": "[concat('https://conn-afd-prod-endpoint-bmc9bqahasf3grgk.b01.azurefd.net/u/kolhemugdha/', parameters('connections_sql_name'), '_plex_0.1.22_version/1.0.1737.4123/', parameters('connections_sql_name'), '/icon.png')]",
                    "brandColor": "#ba141a",
                    "id": "[concat('/subscriptions/95b42fa2-56e8-468e-bd82-bb1af0d7844e/providers/Microsoft.Web/locations/eastus/managedApis/', parameters('connections_sql_name'))]",
                    "type": "Microsoft.Web/locations/managedApis"
                },
                "testLinks": [
                    {
                        "requestUri": "[concat('https://management.azure.com:443/subscriptions/95b42fa2-56e8-468e-bd82-bb1af0d7844e/resourceGroups/Globant_challenge/providers/Microsoft.Web/connections/', parameters('connections_sql_name'), '/extensions/proxy/testconnection?api-version=2016-06-01')]",
                        "method": "get"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_globantchallengela_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_sql_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_HTTP_request_is_received": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "method": "PUT",
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "destination_table": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "job": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "job"
                                                ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "actions": {
                        "Response": {
                            "runAfter": {
                                "For_each": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "statusCode": 200,
                                "body": {
                                    "input": "@triggerBody()?['data']",
                                    "status": "@variables('results')"
                                }
                            }
                        },
                        "For_each": {
                            "foreach": "@triggerBody()?['data']",
                            "actions": {
                                "Insert_row_(V2)": {
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sql']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "body": "@items('For_each')",
                                        "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('default'))},@{encodeURIComponent(encodeURIComponent('default'))}/tables/@{encodeURIComponent(encodeURIComponent(triggerBody()?['destination_table']))}/items"
                                    }
                                },
                                "Append_to_array_variable": {
                                    "runAfter": {
                                        "Insert_row_(V2)": [
                                            "Succeeded",
                                            "Failed",
                                            "TimedOut",
                                            "Skipped"
                                        ]
                                    },
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "results",
                                        "value": {
                                            "item": "@items('For_each')",
                                            "status": "@body('Insert_row_(V2)')"
                                        }
                                    }
                                },
                                "Insert_row_(V2)_1": {
                                    "runAfter": {
                                        "Insert_row_(V2)": [
                                            "Failed",
                                            "Skipped",
                                            "TimedOut"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sql']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "body": {
                                            "error": "{\"destination_table\":\"@{triggerBody()?['destination_table']}\",\"item\":@{items('For_each')}}"
                                        },
                                        "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('default'))},@{encodeURIComponent(encodeURIComponent('default'))}/tables/@{encodeURIComponent(encodeURIComponent('insert_errors'))}/items"
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Initialize_variable": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "results",
                                        "type": "array"
                                    }
                                ]
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "sql": {
                                "id": "/subscriptions/95b42fa2-56e8-468e-bd82-bb1af0d7844e/providers/Microsoft.Web/locations/eastus/managedApis/sql",
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_sql_name'))]",
                                "connectionName": "sql"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_run_bck_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_azuredatafactory_1_name'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_HTTP_request_is_received": {
                            "type": "Request",
                            "kind": "Http"
                        }
                    },
                    "actions": {
                        "Create_a_pipeline_run": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuredatafactory-1']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/subscriptions/@{encodeURIComponent('95b42fa2-56e8-468e-bd82-bb1af0d7844e')}/resourcegroups/@{encodeURIComponent('Globant_challenge')}/providers/Microsoft.DataFactory/factories/@{encodeURIComponent('globant-challenge-df')}/pipelines/@{encodeURIComponent('02_backup_tables')}/CreateRun",
                                "queries": {
                                    "x-ms-api-version": "2017-09-01-preview"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuredatafactory-1": {
                                "id": "/subscriptions/95b42fa2-56e8-468e-bd82-bb1af0d7844e/providers/Microsoft.Web/locations/eastus/managedApis/azuredatafactory",
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_azuredatafactory_1_name'))]",
                                "connectionName": "azuredatafactory-1"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-03-01",
            "name": "[concat(parameters('virtualNetworks_vnet_vpn_01_name'), '/GatewaySubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_vpn_01_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.2.0/24",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-03-01",
            "name": "[concat(parameters('virtualNetworks_vnet_vpn_01_name'), '/networking')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_vpn_01_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.1.0/27",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-03-01",
            "name": "[concat(parameters('virtualNetworks_vnet_vpn_01_name'), '/services')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_vpn_01_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.0.0/24",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/administrators",
            "apiVersion": "2024-05-01-preview",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/ActiveDirectory')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "administratorType": "ActiveDirectory",
                "login": "go2clouds_outlook.com#EXT#@go2cloudsoutlook.onmicrosoft.com",
                "sid": "f62a3cc6-39be-4efb-955a-564b962f854a",
                "tenantId": "ea19273c-9473-45d2-94ff-573b8bc1b893"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advancedThreatProtectionSettings",
            "apiVersion": "2024-05-01-preview",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/CreateIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/DbParameterization')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/DefragmentIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/DropIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/ForceLastGoodPlan')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/auditingPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/Default')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "auditingState": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/auditingSettings",
            "apiVersion": "2024-05-01-preview",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "auditActionsAndGroups": [],
                "isStorageSecondaryKeyInUse": false,
                "isAzureMonitorTargetEnabled": false,
                "isManagedIdentityInUse": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/azureADOnlyAuthentications",
            "apiVersion": "2024-05-01-preview",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "azureADOnlyAuthentication": false
            }
        },
        {
            "type": "Microsoft.Sql/servers/connectionPolicies",
            "apiVersion": "2024-05-01-preview",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/default')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "connectionType": "Default"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases",
            "apiVersion": "2024-05-01-preview",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/globant_challenge_db')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "sku": {
                "name": "GP_S_Gen5",
                "tier": "GeneralPurpose",
                "family": "Gen5",
                "capacity": 2
            },
            "kind": "v12.0,user,vcore,serverless,freelimit",
            "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": 34359738368,
                "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
                "zoneRedundant": false,
                "readScale": "Disabled",
                "autoPauseDelay": 60,
                "requestedBackupStorageRedundancy": "Local",
                "minCapacity": 0.5,
                "maintenanceConfigurationId": "/subscriptions/95b42fa2-56e8-468e-bd82-bb1af0d7844e/providers/Microsoft.Maintenance/publicMaintenanceConfigurations/SQL_Default",
                "isLedgerOn": false,
                "useFreeLimit": true,
                "freeLimitExhaustionBehavior": "AutoPause",
                "availabilityZone": "NoPreference"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advancedThreatProtectionSettings",
            "apiVersion": "2024-05-01-preview",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/master/Default')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "auditingState": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingSettings",
            "apiVersion": "2024-05-01-preview",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/extendedAuditingSettings",
            "apiVersion": "2024-05-01-preview",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "apiVersion": "2024-05-01-preview",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/ledgerDigestUploads",
            "apiVersion": "2024-05-01-preview",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/master/Current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
            "apiVersion": "2024-05-01-preview",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "apiVersion": "2024-05-01-preview",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/master/Current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
            "apiVersion": "2024-05-01-preview",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                }
            }
        },
        {
            "type": "Microsoft.Sql/servers/devOpsAuditingSettings",
            "apiVersion": "2024-05-01-preview",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "isAzureMonitorTargetEnabled": false,
                "isManagedIdentityInUse": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/encryptionProtector",
            "apiVersion": "2024-05-01-preview",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "kind": "servicemanaged",
            "properties": {
                "serverKeyName": "ServiceManaged",
                "serverKeyType": "ServiceManaged",
                "autoRotationEnabled": false
            }
        },
        {
            "type": "Microsoft.Sql/servers/extendedAuditingSettings",
            "apiVersion": "2024-05-01-preview",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "auditActionsAndGroups": [],
                "isStorageSecondaryKeyInUse": false,
                "isAzureMonitorTargetEnabled": false,
                "isManagedIdentityInUse": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/firewallRules",
            "apiVersion": "2024-05-01-preview",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/AllowAllWindowsAzureIps')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
            }
        },
        {
            "type": "Microsoft.Sql/servers/firewallRules",
            "apiVersion": "2024-05-01-preview",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/ClientIPAddress')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "startIpAddress": "177.53.213.179",
                "endIpAddress": "177.53.213.179"
            }
        },
        {
            "type": "Microsoft.Sql/servers/firewallRules",
            "apiVersion": "2024-05-01-preview",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/ClientIPAddress_2025-3-5_22-38-48')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "startIpAddress": "177.53.213.178",
                "endIpAddress": "177.53.213.178"
            }
        },
        {
            "type": "Microsoft.Sql/servers/firewallRules",
            "apiVersion": "2024-05-01-preview",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/dbeaber')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "startIpAddress": "177.53.213.177",
                "endIpAddress": "177.53.213.177"
            }
        },
        {
            "type": "Microsoft.Sql/servers/keys",
            "apiVersion": "2024-05-01-preview",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/ServiceManaged')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "kind": "servicemanaged",
            "properties": {
                "serverKeyType": "ServiceManaged"
            }
        },
        {
            "type": "Microsoft.Sql/servers/securityAlertPolicies",
            "apiVersion": "2024-05-01-preview",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/sqlVulnerabilityAssessments",
            "apiVersion": "2024-05-01-preview",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/vulnerabilityAssessments",
            "apiVersion": "2024-05-01-preview",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                },
                "storageContainerPath": "[parameters('vulnerabilityAssessments_Default_storageContainerPath')]"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_globantchallengesa_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_globantchallengesa_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "allowPermanentDelete": false,
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_globantchallengesa_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_globantchallengesa_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "protocolSettings": {
                    "smb": {}
                },
                "cors": {
                    "corsRules": []
                },
                "shareDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_globantchallengesa_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_globantchallengesa_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_globantchallengesa_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_globantchallengesa_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworkGateways",
            "apiVersion": "2024-03-01",
            "name": "[parameters('virtualNetworkGateways_vpn01_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_vpn_public_ip_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_vpn_01_name'), 'GatewaySubnet')]"
            ],
            "properties": {
                "enablePrivateIpAddress": false,
                "ipConfigurations": [
                    {
                        "name": "default",
                        "id": "[concat(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_vpn01_name')), '/ipConfigurations/default')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_vpn_public_ip_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_vpn_01_name'), 'GatewaySubnet')]"
                            }
                        }
                    }
                ],
                "natRules": [],
                "virtualNetworkGatewayPolicyGroups": [],
                "enableBgpRouteTranslationForNat": false,
                "disableIPSecReplayProtection": false,
                "sku": {
                    "name": "VpnGw1",
                    "tier": "VpnGw1"
                },
                "gatewayType": "Vpn",
                "vpnType": "RouteBased",
                "enableBgp": false,
                "activeActive": false,
                "bgpSettings": {
                    "asn": 65515,
                    "bgpPeeringAddress": "10.0.2.254",
                    "peerWeight": 0,
                    "bgpPeeringAddresses": [
                        {
                            "ipconfigurationId": "[concat(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateways_vpn01_name')), '/ipConfigurations/default')]",
                            "customBgpIpAddresses": []
                        }
                    ]
                },
                "vpnGatewayGeneration": "Generation1",
                "allowRemoteVnetTraffic": false,
                "allowVirtualWanTraffic": false
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advancedThreatProtectionSettings",
            "apiVersion": "2024-05-01-preview",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/globant_challenge_db/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_globant_challenge_db_server_name'), 'globant_challenge_db')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/globant_challenge_db/CreateIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_globant_challenge_db_server_name'), 'globant_challenge_db')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/globant_challenge_db/DbParameterization')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_globant_challenge_db_server_name'), 'globant_challenge_db')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/globant_challenge_db/DefragmentIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_globant_challenge_db_server_name'), 'globant_challenge_db')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/globant_challenge_db/DropIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_globant_challenge_db_server_name'), 'globant_challenge_db')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/globant_challenge_db/ForceLastGoodPlan')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_globant_challenge_db_server_name'), 'globant_challenge_db')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/globant_challenge_db/Default')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_globant_challenge_db_server_name'), 'globant_challenge_db')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "auditingState": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingSettings",
            "apiVersion": "2024-05-01-preview",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/globant_challenge_db/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_globant_challenge_db_server_name'), 'globant_challenge_db')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/backupLongTermRetentionPolicies",
            "apiVersion": "2024-05-01-preview",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/globant_challenge_db/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_globant_challenge_db_server_name'), 'globant_challenge_db')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "weeklyRetention": "PT0S",
                "monthlyRetention": "PT0S",
                "yearlyRetention": "PT0S",
                "weekOfYear": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/backupShortTermRetentionPolicies",
            "apiVersion": "2024-05-01-preview",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/globant_challenge_db/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_globant_challenge_db_server_name'), 'globant_challenge_db')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "retentionDays": 7,
                "diffBackupIntervalInHours": 12
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/extendedAuditingSettings",
            "apiVersion": "2024-05-01-preview",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/globant_challenge_db/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_globant_challenge_db_server_name'), 'globant_challenge_db')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "apiVersion": "2024-05-01-preview",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/globant_challenge_db/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_globant_challenge_db_server_name'), 'globant_challenge_db')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/ledgerDigestUploads",
            "apiVersion": "2024-05-01-preview",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/globant_challenge_db/Current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_globant_challenge_db_server_name'), 'globant_challenge_db')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
            "apiVersion": "2024-05-01-preview",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/globant_challenge_db/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_globant_challenge_db_server_name'), 'globant_challenge_db')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "apiVersion": "2024-05-01-preview",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/globant_challenge_db/Current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_globant_challenge_db_server_name'), 'globant_challenge_db')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "state": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
            "apiVersion": "2024-05-01-preview",
            "name": "[concat(parameters('servers_globant_challenge_db_server_name'), '/globant_challenge_db/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_globant_challenge_db_server_name'), 'globant_challenge_db')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_globant_challenge_db_server_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_globantchallengesa_name'), '/default/backup')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_globantchallengesa_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_globantchallengesa_name'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_globantchallengesa_name'), '/default/historic-data')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_globantchallengesa_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_globantchallengesa_name'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        }
    ]
}